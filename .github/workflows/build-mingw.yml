name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'

jobs:
  build:
    strategy:
      matrix:
        build_type: [static, shared]
        
    runs-on: windows-latest
    env:
      libraryName: ledger
      cmakeInstallationPath: ledger-installation
      tagName: v3.3.2
    steps:
      - name: git clone
        shell: cmd
        run: git clone --recurse-submodules https://github.com/ledger/ledger.git && cd ledger && git checkout ${{ env.tagName }}
        
      - name: curl x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        shell: cmd
        run: |
          curl https://github.com/dirkarnez/cpp-tools/raw/main/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z -L -O -J &&^
          7z.exe x x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z

      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
      
      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip
          
      - shell: cmd
        run: |
          curl https://github.com/dirkarnez/utfcpp-prebuilt/releases/download/v3.2.4/utfcpp-v3.2.4-mingw64-x86_64-posix-seh-rev0-8.1.0.zip  -L -O -J &&^
          7z.exe x utfcpp-v3.2.4-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -o"utfcpp-v3.2.4-mingw64-x86_64-posix-seh-rev0-8.1.0"
          
      - shell: cmd
        run: |
          cd ledger &&^
          dir &&^
          "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i "s/include(FindUtfcpp)/find_package(utf8cpp 3.2.4 EXACT REQUIRED)/g" CMakeLists.txt &&^
          "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i "s/if\s*(UTFCPP_FOUND)/if (utf8cpp_FOUND)/g" CMakeLists.txt &&^
          "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i 's/include_directories(.*UTFCPP_INCLUDE_DIR.*)/include_directories("${utf8cpp_DIR}\/..\/..\/..\/include\/utf8cpp")/g' CMakeLists.txt &&^
          "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i 's/add_subdirectory\s*(doc)//g' CMakeLists.txt &&^
          "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i 's/add_subdirectory\s*(test)//g' CMakeLists.txt &&^
          type CMakeLists.txt
          
      - if: ${{ matrix.build_type == 'static' }}
        shell: cmd
        run: |
          cd ledger\src &&^
          dir &&^
          "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i 's/add_library(libledger SHARED ${LEDGER_SOURCES})/add_library(libledger STATIC ${LEDGER_SOURCES})/g' CMakeLists.txt &&^
          type CMakeLists.txt
          
      - shell: cmd
        run: |
          curl "https://github.com/dirkarnez/gmp-prebuilt/releases/download/v6.3.0/gmp-v6.3.0-mingw64-x86_64-posix-seh-rev0-8.1.0.zip" -L -O -J &&^
          7z.exe x gmp-v6.3.0-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -o"gmp-v6.3.0-mingw64-x86_64-posix-seh-rev0-8.1.0"

      - shell: cmd
        run: |
          curl "https://github.com/dirkarnez/mpfr-prebuilt/releases/download/v4.2.0/mpfr-v4.2.0-mingw64-x86_64-posix-seh-rev0-8.1.0.zip" -L -O -J &&^
          7z.exe x mpfr-v4.2.0-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -o"mpfr-v4.2.0-mingw64-x86_64-posix-seh-rev0-8.1.0"
          
      - shell: cmd
        run: |
          curl "https://github.com/dirkarnez/boost-prebuilt/releases/download/v1.72.0/boost-v1.72.0-mingw64-x86_64-posix-seh-rev0-8.1.0.zip" -L -O -J &&^
          7z.exe x boost-v1.72.0-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -o"boost-v1.72.0-mingw64-x86_64-posix-seh-rev0-8.1.0"
          
      - if: ${{ matrix.build_type == 'static' }}
        name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
            set PATH=^
            ${{ github.workspace }}\mingw64;^
            ${{ github.workspace }}\mingw64\bin;^
            ${{ github.workspace }}\PortableGit-2.38.1-64-bit\bin;^
            ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;
            set CD_LINUX=%CD:\=/%
            gcc --version &&^
            cd ledger &&^
            cmake.exe -G"MinGW Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_PREFIX_PATH="%CD_LINUX%/gmp-v6.3.0-mingw64-x86_64-posix-seh-rev0-8.1.0;%CD_LINUX%/mpfr-v4.2.0-mingw64-x86_64-posix-seh-rev0-8.1.0" ^
            -Dutf8cpp_DIR="%CD_LINUX%/utfcpp-v3.2.4-mingw64-x86_64-posix-seh-rev0-8.1.0/lib/cmake/utf8cpp" ^
            -DBoost_COMPILER=mgw81 ^
            -DBoost_NO_SYSTEM_PATHS=TRUE ^
            -DBoost_USE_STATIC_LIBS=TRUE ^
            -DBoost_USE_STATIC_RUNTIME=ON ^
            -DCMAKE_EXE_LINKER_FLAGS="-static" ^
            -DBOOST_ROOT="%CD_LINUX%/boost-v1.72.0-mingw64-x86_64-posix-seh-rev0-8.1.0/lib/cmake/Boost-1.72.0" ^
            -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
            cd cmake-build && cmake --build . && cmake --install . 

      - if: ${{ matrix.build_type == 'shared' }}
        name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
            set PATH=^
            ${{ github.workspace }}\mingw64;^
            ${{ github.workspace }}\mingw64\bin;^
            ${{ github.workspace }}\PortableGit-2.38.1-64-bit\bin;^
            ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;
            set CD_LINUX=%CD:\=/%
            gcc --version &&^
            cd ledger &&^
            cmake.exe -G"MinGW Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_PREFIX_PATH="%CD_LINUX%/gmp-v6.3.0-mingw64-x86_64-posix-seh-rev0-8.1.0;%CD_LINUX%/mpfr-v4.2.0-mingw64-x86_64-posix-seh-rev0-8.1.0" ^
            -Dutf8cpp_DIR="%CD_LINUX%/utfcpp-v3.2.4-mingw64-x86_64-posix-seh-rev0-8.1.0/lib/cmake/utf8cpp" ^
            -DBoost_COMPILER=mgw81 ^
            -DBoost_NO_SYSTEM_PATHS=TRUE ^
            -DBoost_USE_STATIC_LIBS=TRUE ^
            -DBoost_USE_STATIC_RUNTIME=ON ^
            -DBOOST_ROOT="%CD_LINUX%/boost-v1.72.0-mingw64-x86_64-posix-seh-rev0-8.1.0/lib/cmake/Boost-1.72.0" ^
            -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
            cd cmake-build && cmake --build . && cmake --install . 
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "ledger/cmake-build/${{ env.cmakeInstallationPath }}"
          filename: ledger-${{ github.ref_name }}-${{ matrix.build_type }}-mingw64-x86_64-posix-seh-rev0-8.1.0.zip
        
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "ledger/cmake-build/${{ env.cmakeInstallationPath }}/ledger-${{ github.ref_name }}-${{ matrix.build_type }}-mingw64-x86_64-posix-seh-rev0-8.1.0.zip"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
